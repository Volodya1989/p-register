{"version":3,"file":"static/js/549.d54088d0.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/RegisterForm/RegisterForm.styled.jsx","hooks/useLocalStorage.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: block;\n  text-align: center;\n  width: 700px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 30px;\n`;\n\nexport const Name = styled.input`\n  width: 300px;\n`;\n\nexport const Phonebook = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  border-radius: 10px;\n  padding: 20px;\n  background: linear-gradient(to bottom right, #f5f7fa, #b8c6db);\n`;\n\n\n","import styled from 'styled-components';\n\nexport const RotatingLinesStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 15%;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { RotatingLinesStyled } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <RotatingLinesStyled>\n      <RotatingLines\n        strokeColor=\"#f4c550\"\n        margin=\"auto\"\n        textAlign=\"center\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </RotatingLinesStyled>\n  );\n};\nexport default Loader;\n","import styled from \"styled-components\";\nimport { ToastContainer } from \"react-toastify\";\n\nexport const ModalDetailsStyled = styled.img`\n  positon: relative;\n`;\n\nexport const Description = styled.div`\n  position: relative;\n  display: block;\n  margin: auto;\n  margin-top: 100px;\n  max-width: 600px;\n  background-color: #f7f7f7;\n  padding: 60px 60px;\n  border-radius: 30px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n    line-height: 1.07;\n    width: 600px;\n  }\n  @media screen and (min-width: 1100px) {\n    font-size: 30px;\n    line-height: 1.06;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: var(--subheadingFonSize);\n  line-height: 1.18;\n  margin-top: 10px;\n  margin-bottom: 25px;\n`;\nexport const Heading = styled.h3`\n  font-size: 40px;\n  line-height: calc(48 / 40);\n  font-weight: 500;\n  margin-bottom: 25px;\n  text-align: left;\n  letter-spacing: -0.02em;\n`;\nexport const DescrText = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: calc(22 / 16);\n  text-align: left;\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 300;\n  width: 200px;\n  color: #9ca5b5;\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  transition: all 0.2s ease;\n  pointer-events: none;\n  padding-left: 15px;\n`;\n\nexport const Wrapper = styled.section`\n  flex-direction: \"row\";\n  alignitems: \"center\";\n  position: relative;\n  margin-top: 30px;\n`;\n\nexport const StyledImg = styled.img`\n  border-radius: 50%;\n  width: 44px;\n  height: 44px;\n`;\n\nexport const Field = styled.input`\n  display: flex;\n  border: 0;\n  font-size: 22px;\n  background-color: transparent;\n  padding-top: 10px;\n  border-bottom: 1px solid #f4c550;\n\n  outline: none;\n  width: 100%;\n  color: black;\n  overflow: hidden;\n\n  ${({ disabled }) =>\n    (disabled || \"\") &&\n    `\n    pointer-events: none;\n    \n  `}\n\n  &:focus {\n    border-color: #6118de;\n  }\n\n  &:focus ~ ${Label} {\n    transform: translateY(-40px);\n    // scale: 0.9;\n    color: #9ca5b5;\n  }\n\n  ${({ value = \"\" }) =>\n    value &&\n    `\n    & ~ ${Label} {\n      transform: translateY(-40px);\n\n    }\n  `}\n`;\nexport const ErrorMessage = styled.p`\n  font-size: 15px;\n  line-height: calc(18 / 12);\n  color: red;\n`;\n\nexport const MainButton = styled.input`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  height: Hug (60px) px;\n  padding: 16px 48px 16px 48px;\n  gap: 0px;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n  border-radius: 12px;\n  opacity: 0px;\n  font-weight: 700;\n  background: #f4c550;\n  border: none;\n  font-size: 18px;\n  line-height: calc(28 / 18);\n  cursor: pointer;\n  &:hover {\n    transition: opacity 0.4s;\n    opacity: 0.8;\n    transition-timing-function: ease;\n  }\n`;\nexport const ProtectedEye = styled.div`\n  position: absolute;\n  top: 0;\n  right: 20px;\n  cursor: pointer;\n`;\nexport const ContainerLoader = styled.div`\n  position: absolute;\n  z-index: 10;\n  top: 1em;\n  left: 8em;\n`;\nexport const StyledToastContainer = styled(ToastContainer).attrs({\n  className: \".toast-message\",\n  toastClassName: \"toast\",\n  bodyClassName: \"body\",\n  progressClassName: \"progress\",\n})`\n  .toast-message {\n    width: 100%;\n    background-color: #f4c550;\n    color: #black;\n    font-size: 20px;\n  }\n`;\n","import { useState, useEffect } from 'react';\n//this hook gets and saves current state into localStorage\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n}\n","import { useForm } from \"react-hook-form\";\nimport { useCallback, useEffect, useState, useRef } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useFetch from \"use-http\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Description,\n  Heading,\n  Label,\n  Field,\n  Wrapper,\n  ErrorMessage,\n  MainButton,\n  DescrText,\n  ProtectedEye,\n  ContainerLoader,\n  StyledToastContainer,\n} from \"./RegisterForm.styled\";\nimport { ToastContainer } from \"react-toastify\";\nimport Loader from \"components/Loader\";\nimport { IoEyeOffOutline, IoEyeOutline } from \"react-icons/io5\";\nimport { useDispatch } from \"react-redux\";\nimport { register as reg } from \"redux/auth/operations\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nexport const RegisterForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const { loading } = useFetch();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [BtnName, setBtnName] = useState(\"Sign Up\");\n  const [active, setActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isSubmitSuccessful, setIsSubmitSuccessful] = useState(false);\n  const [isServerStartingUp, setIsServerStartingUp] = useLocalStorage(\n    \"isServerUp\",\n    true\n  );\n  const timeoutRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  //setting query state on change and passing it as props to search component\n  const onQueryChange = useCallback(\n    (e) => {\n      if (e.currentTarget.value === \" \") {\n        return;\n      }\n      if (e.currentTarget.name === \"email\") {\n        setEmail(e.currentTarget.value.trim());\n      }\n      if (e.currentTarget.name === \"password\") {\n        setPassword(e.currentTarget.value.trim());\n      }\n      if (e.currentTarget.name === \"name\") {\n        setName(e.currentTarget.value.trim());\n      }\n      if (e.currentTarget.name === \"lastName\") {\n        setLastName(e.currentTarget.value.trim());\n      }\n    },\n    [setEmail, setPassword, setName, setLastName]\n  );\n\n  //common method success notifications\n  const toastSuccess = (message, _) => {\n    toast.success(message, {\n      className: \"toast-message\",\n    });\n  };\n  const toastError = (message, _) => {\n    toast.error(message, {\n      className: \"toast-message\",\n    });\n  };\n  const toastInfo = (message, _) => {\n    toast.info(message, {\n      className: \"toast-message\",\n    });\n  };\n\n  const onSubmitForm = (data) => {\n    setIsSubmitSuccessful(true);\n    if (data.password === \"\" && data.email === \"\") {\n      toastError(\"Please provide details\");\n      return;\n    } else {\n      if (isServerStartingUp) {\n        setIsServerStartingUp(false);\n        timeoutRef.current = setTimeout(() => {\n          toastInfo(\n            `Please wait as it takes few more seconds for server to wake up.`\n          );\n          console.log(\"Server is starting up.\");\n        }, 10500);\n      }\n\n      setPassword(\"\");\n      setEmail(\"\");\n      setName(\"\");\n      setLastName(\"\");\n      setIsLoading(true);\n      setActive(true);\n    }\n\n    dispatch(\n      reg({\n        firstName: data.name,\n        lastName: data.lastName,\n        email: data.email.toLowerCase(),\n        password: data.password,\n      })\n    ).then((data) => {\n      try {\n        clearTimeout(timeoutRef.current);\n        setIsLoading(false);\n        if (data?.error?.message) {\n          const { payload: errorMessage } = data;\n          setTimeout(() => {\n            setActive(false);\n          }, 2000);\n          setActive(true);\n          const emailInUseError = \"Email in use\";\n          const passwordError = \"PASSWORD should have a minimum length of 6\";\n          const emailError = `\"email\" with value \"${data.meta.arg.email}\" fails to match the required pattern: /^\\\\w+([.-]?\\\\w+)*@\\\\w+([.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$/`;\n          const usernameError =\n            \"E11000 duplicate key error collection: Lingo.users index: username_1 dup key\";\n          if (errorMessage === emailInUseError) {\n            toastError(\"Please provide different email.\");\n          } else if (errorMessage === passwordError) {\n            toastError(`${passwordError} characters.`);\n          } else if (errorMessage === emailError) {\n            toastError(\"Please provide valid Email.\");\n          } else if (errorMessage.includes(usernameError)) {\n            toastError(\"Please provide First Name.\");\n          } else {\n            toastError(`Please try again as server error occured.`);\n          }\n        }\n        if (!data?.error?.message) {\n          setBtnName(\"Signing up...\");\n          setActive(true);\n          toastSuccess(\n            `${username}, please check your email to verify your registration.`\n          );\n          setTimeout(() => {\n            setBtnName(\"Sign up\");\n            setActive(false);\n            navigate(\"/login\", { replace: true });\n          }, 5000);\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    });\n    const username = data.name;\n  };\n  const togglePassword = () => {\n    setIsVisible(!isVisible);\n  };\n\n  const handleLoading = useCallback(\n    (e) => {\n      if (!loading && !isSubmitSuccessful) {\n        setTimeout(() => {\n          setIsLoading(true);\n        }, 1000);\n      }\n    },\n    [loading, isSubmitSuccessful]\n  );\n\n  useEffect(() => {\n    handleLoading();\n  }, [handleLoading]);\n  return (\n    <>\n      {!isLoading && !isSubmitSuccessful ? (\n        <Loader />\n      ) : (\n        <Description>\n          <ContainerLoader>\n            {isLoading && isSubmitSuccessful && <Loader />}\n          </ContainerLoader>\n          <StyledToastContainer autoClose={6000} position=\"top-right\">\n            <ToastContainer />;\n          </StyledToastContainer>\n          <Heading>{`Registration`}</Heading>\n          <DescrText>\n            Thank you for your interest in our platform! In order to register,\n            we need some information. Please provide us with the following\n            information\n          </DescrText>\n\n          <form onSubmit={handleSubmit((data) => onSubmitForm(data))}>\n            {errors.password && (\n              <ErrorMessage>Password is required.</ErrorMessage>\n            )}\n            {errors.email && <ErrorMessage>Email is required.</ErrorMessage>}\n            {errors.name && (\n              <ErrorMessage>First Name is required.</ErrorMessage>\n            )}\n            {errors.lastName && (\n              <ErrorMessage>Last Name is required.</ErrorMessage>\n            )}\n\n            <Wrapper>\n              <Field\n                {...register(\"name\", { required: true, value: name })}\n                onChange={onQueryChange}\n                name=\"name\"\n                value={name}\n                autoComplete=\"off\"\n                type={\"text\"}\n              />\n              <Label htmlFor={1}>{\"First Name\"}</Label>\n            </Wrapper>\n            <Wrapper>\n              <Field\n                {...register(\"lastName\", { required: true, value: lastName })}\n                onChange={onQueryChange}\n                name=\"lastName\"\n                value={lastName}\n                autoComplete=\"off\"\n                type={\"text\"}\n              />\n              <Label htmlFor={1}>{\"Last Name\"}</Label>\n            </Wrapper>\n            <Wrapper>\n              <Field\n                {...register(\"email\", { required: true, value: email })}\n                onChange={onQueryChange}\n                name=\"email\"\n                value={email}\n                autoComplete=\"off\"\n                type={\"text\"}\n              />\n              <Label htmlFor={1}>{\"Email\"}</Label>\n            </Wrapper>\n            <Wrapper>\n              <Field\n                {...register(\"password\", {\n                  required: true,\n                  value: password,\n                })}\n                sx={{\n                  position: \"relative\",\n                }}\n                onChange={onQueryChange}\n                name=\"password\"\n                value={password}\n                autoComplete=\"off\"\n                type={isVisible ? \"text\" : \"password\"}\n              />\n              <ProtectedEye onClick={togglePassword}>\n                {!isVisible ? <IoEyeOutline /> : <IoEyeOffOutline />}\n              </ProtectedEye>\n              <Label htmlFor={1}>{\"Password\"}</Label>\n            </Wrapper>\n\n            <MainButton\n              disabled={active}\n              type=\"submit\"\n              value={\n                isLoading && isSubmitSuccessful ? \"Submitting...\" : BtnName\n              }\n            />\n          </form>\n        </Description>\n      )}\n    </>\n  );\n};\nexport default RegisterForm;\n","import { Helmet } from \"react-helmet\";\nimport { Container } from \"components/App/App.styled\";\n\nimport RegisterForm from \"components/RegisterForm/RegisterForm\";\n\nexport default function Register() {\n  return (\n    <Container>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n\n        <RegisterForm />\n    </Container>\n  );\n}\n"],"names":["Container","styled","div","input","RotatingLinesStyled","Loader","_jsx","children","RotatingLines","strokeColor","margin","textAlign","strokeWidth","animationDuration","width","visible","img","Description","Heading","p","h3","DescrText","Label","label","Wrapper","section","Field","_ref","disabled","_ref2","value","ErrorMessage","MainButton","ProtectedEye","ContainerLoader","StyledToastContainer","ToastContainer","attrs","className","toastClassName","bodyClassName","progressClassName","useLocalStorage","key","defaultValue","state","setState","useState","_JSON$parse","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","RegisterForm","register","handleSubmit","formState","errors","useForm","loading","useFetch","password","setPassword","email","setEmail","name","setName","lastName","setLastName","BtnName","setBtnName","active","setActive","isLoading","setIsLoading","isVisible","setIsVisible","isSubmitSuccessful","setIsSubmitSuccessful","isServerStartingUp","setIsServerStartingUp","timeoutRef","useRef","dispatch","useDispatch","navigate","useNavigate","onQueryChange","useCallback","e","currentTarget","trim","toastError","message","_","toast","error","onSubmitForm","data","current","setTimeout","toastInfo","info","console","log","reg","firstName","toLowerCase","then","_data$error","_data$error2","clearTimeout","payload","errorMessage","emailInUseError","passwordError","emailError","meta","arg","usernameError","includes","username","success","replace","toastSuccess","handleLoading","_Fragment","_jsxs","autoClose","position","onSubmit","required","onChange","autoComplete","type","htmlFor","sx","onClick","togglePassword","IoEyeOffOutline","IoEyeOutline","Register","Helmet"],"sourceRoot":""}